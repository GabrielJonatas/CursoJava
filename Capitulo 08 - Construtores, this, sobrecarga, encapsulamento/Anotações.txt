Construtor

- É uma operação especial da classe, que executa no momento da instanciação do objeto
- Usos comuns: Iniciar valores do atributos, permitir ou  obrigar que o objeto receba dados/ dependdências no momento de sua instanciação (injeção de dependÊncia)
- Se um construtor customizado não for especificado, a classe disponibiliza o construtor padrão: Product p = new Product();
- É possivel especificar mais de um cosntrutor na mesma classe (sobrecarga)

------------------------------------------------

This

É uma referência para o próprio objeto

Usos comuns:
- Diferenciar atributos de variáveis locais
- Passar o próprio objeto como argumento na chamada de um método ou construtor

----------------------------------------------

Sobrecarga

É um recurso que uma classe possuide oferecer mais de uma operação com o mesmo nome, porém com diferentes listas de parâmetros

--------------------------------------------

Encapsulamento

É um principio que consiste em esconder detalhes da implementação de uma classe, expondo apenas operações seguras e que mantenham os objetos em um estado consistente

Regra de ouro: o objeto deve sempre estar em um estado consistente, e a própria classe deve garantir isso

Regra geral básica

Um objeto NÃO deve expor nenhum atributo (modificador de acesso private)

Os atributos devem ser acessados por meio de métodos get e set

--------------------------------------------

Gerar get e set pelo eclipse automaticamente

Botão direito -> source -> generate Constructor using fields

Botão direito -> source -> generate getters and setters

---------------------------------------------

Modificadores de acesso

private: o membro só pode ser acessado na própria classe

(nada): o membro só pode ser acessado nas classes do mesmo pacote

protected: o membro só pode ser acessado no mesmo pacote, bem como em subclasses de pacotes diferentes

public: o membro é acessado por todas classes (ao menos que ele resida em um módulo diferente que não exporte o pacote onde ele está)

